#!/bin/sh

##################################################
# Configuration for the builtin shell job system #
##################################################

## Set options for jobs
setopt BG_NICE            # all background jobs run at the same nice level
setopt CHECK_JOBS         # Do not exit shells when there are still suspended jobs
setopt CHECK_RUNNING_JOBS # Also check for running jobs

## Parallelize a function by making a new job once per argumetn given
function parallelize-it () {
	local skip_string=x

	if [[ $1 = -- ]]; then
		shift
	elif [[ $1 = -h || $1 = --help ]]; then
		echo "(fn=FUNCTION) $0 args ..."
		echo "  This command executes 'fn' once for each arg as background"
		echo "  job. Unless the variable 'parallelize_it_no_skip' has been"
		echo "  set, if an arg is '$skip_string', neither it nor the previous arg will"
		echo "  be executed. A special case is if '$skip_string' is the first arg, it"
		echo "  will also be executed."
		exit -1
	fi

	: "${fn?a function must be supplied}"
	should_skip="${parallelize_it_no_skip+1}"
	# TODO: see if the function is executable?

	until [[ $# = 0 ]]; do
		if [[ -z $should_skip && $2 == $skip_string ]]; then
			shift
		else
			$fn $1 &
		fi

		shift
	done
}

## Aliases
alias j=jobs
